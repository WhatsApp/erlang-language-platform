on:
  workflow_call:
    inputs:
      target:
        required: true
        type: choice
        options:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
          - x86_64-apple-darwin
          - aarch64-apple-darwin

jobs:
  vars:
    runs-on: ubuntu-latest
    outputs:
      build-platform: ${{ steps.derivation.outputs.build-platform }}
    steps:
      - id: derivation
        run: |
          case "${{ inputs.target }}" in
            *-linux-gnu)
              echo "build-platform=\"ubuntu-latest\"" >> $GITHUB_OUTPUT
              ;;
            *-apple-darwin)
              echo "build-platform=\"macos-latest\"" >> $GITHUB_OUTPUT
              ;;
          esac

  eqwalizer-jar:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout eqwalizer
        uses: actions/checkout@v4
        with:
          repository: WhatsApp/eqwalizer

      - name: Assemble eqwalizer.jar
        working-directory: eqwalizer
        run: |
          sbt assembly

      # - name: Test eqwalizer
      #   working-directory: eqwalizer
      #   run: |
      #     sbt test

      - name: "Upload artifact: eqwalizer.jar"
        uses: actions/upload-artifact@v4
        with:
          name: eqwalizer.jar
          path: ./eqwalizer/target/scala-2.13/eqwalizer.jar


  equalizer-native:
    needs: [vars, eqwalizer-jar]
    runs-on: ${{ needs.vars.outputs.build_platform }}
    steps:
      - name: "Download artifact: eqwalizer.jar"
        uses: actions/download-artifact@v4
        with:
          name: eqwalizer.jar
          path: artifacts/

      - name: Set up GraalVM
        if: ${{ inputs.target != 'aarch64-unknown-linux-gnu' }}
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: "21"
          distribution: "graalvm"
          github-token: ${{ github.token }}

      - name: Assemble eqwalizer binary
        if: ${{ inputs.target != 'aarch64-unknown-linux-gnu' }}
        run: |
          native-image \
            -H:IncludeResources=application.conf \
            -H:+ReportExceptionStackTraces \
            --no-server \
            --no-fallback \
            -jar artifacts/eqwalizer.jar \
            eqwalizer.${{ inputs.target }}

      - name: Assemble eqwalizer binary (aarch64-unknown-linux-gnu)
        if: ${{ inputs.target == 'aarch64-unknown-linux-gnu' }}
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: aarch64
          distro: ubuntu20.04
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"
          install: |
            apt-get -q update
            apt-get -q install -y curl gcc zlib1g-dev
            GRAALVM_URL=https://download.oracle.com/graalvm/21/latest/graalvm-jdk-21_linux-aarch64_bin.tar.gz
            GRAALVM_SHA256=$(curl -s "${GRAALVM_URL}.sha256")
            curl --output graalvm.tar.gz "${GRAALVM_URL}"
            echo "$GRAALVM_SHA256  graalvm.tar.gz" | sha256sum -c
            mkdir /opt/graalvm
            tar -xzf graalvm.tar.gz -C /opt/graalvm --strip-components=1
          run: |
            /opt/graalvm/bin/native-image \
              -H:IncludeResources=application.conf \
              -H:+ReportExceptionStackTraces \
              --no-server \
              --no-fallback \
              -jar /artifacts/eqwalizer.jar \
              /artifacts/eqwalizer.aarch64-unknown-linux-gnu

      - name: "Upload artifact: eqwalizer.${{ inputs.target }}"
        uses: actions/upload-artifact@v4
        with:
          name: eqwalizer.${{ inputs.target }}
          path: /artifacts/eqwalizer.${{ inputs.target }}