[package]
autobins = false
name = "elp"
edition.workspace = true
version.workspace = true

[features]
default = ["buck"]
buck = ["elp_project_model/buck"]

[[bin]]
name = "elp"
path = "src/bin/main.rs"

[lints]
workspace = true

[dependencies]
elp_eqwalizer.workspace = true
elp_ide.workspace = true
elp_log.workspace = true
elp_project_model.workspace = true
elp_syntax.workspace = true
hir.workspace = true

always-assert.workspace = true
anyhow.workspace = true
bpaf.workspace = true
codespan-reporting.workspace = true
crossbeam-channel.workspace = true
env_logger.workspace = true
fs_extra.workspace = true
fxhash.workspace = true
include_dir.workspace = true
indexmap.workspace = true
indicatif.workspace = true
itertools.workspace = true
jod-thread.workspace = true
lazy_static.workspace = true
log.workspace = true
lsp-server.workspace = true
lsp-types.workspace = true
parking_lot.workspace = true
paths.workspace = true
profile.workspace = true
range-set.workspace = true
rayon.workspace = true
regex.workspace = true
rustyline.workspace = true
serde_json.workspace = true
serde_path_to_error.workspace = true
serde.workspace = true
stdx.workspace = true
strsim.workspace = true
tempfile.workspace = true
text-edit.workspace = true
threadpool.workspace = true
timeout-readwrite.workspace = true
toml.workspace = true
tracing.workspace = true
vfs-notify.workspace = true
vfs.workspace = true

[target.'cfg(not(any(target_env = "msvc", target_os = "openbsd")))'.dependencies]
jemalloc-ctl.workspace = true
jemallocator.workspace = true
profile = { workspace = true, features = ["jemalloc"] }

[dev-dependencies]
expect-test.workspace = true
test-case.workspace = true

[build-dependencies]
time = { version = "0.3.36", features = ["formatting"] }
