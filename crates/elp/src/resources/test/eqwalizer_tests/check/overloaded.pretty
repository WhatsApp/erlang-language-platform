error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/overloaded.erl:29:5
   │
29 │     B.
   │     ^ B.
Expression has type:   binary()
Context expected type: atom()

error: ambiguous_lambda (See https://fb.me/eqwalizer_errors#ambiguous_lambda)
    ┌─ check/src/overloaded.erl:102:15
    │
102 │     Res = bar(fun(a) -> a end),
    │               ^^^^^^^^^^^^^^^ fun.
Functional expression can match multiple types in fun(('a') -> 'b') | fun(('a') -> 'c')

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
    ┌─ check/src/overloaded.erl:117:15
    │
117 │     Res = bar(F),
    │               ^
    │               │
    │               F.
Expression has type:   fun(('a') -> 'z')
Context expected type: fun(('a') -> 'b') | fun(('a') -> 'c')
    │               

Because in the expression's type:
  fun(('a') ->
    Here the type is:     'z'
    Context expects type: 'b'
  )

------------------------------ Detailed message ------------------------------

  fun(('a') -> 'z') is not compatible with fun(('a') -> 'b') | fun(('a') -> 'c')
  because
  fun(('a') -> 'z') is not compatible with fun(('a') -> 'b')
  because
  'z' is not compatible with 'b'

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
    ┌─ check/src/overloaded.erl:126:15
    │
126 │     Res = bar({fun(a) -> a end}),
    │               ^^^^^^^^^^^^^^^^^
    │               │
    │               {fun}.
Expression has type:   {fun((dynamic()) -> dynamic())}
Context expected type: fun(('a') -> 'b') | fun(('a') -> 'c')
    │               

expected union does not contain any tuple type of size 1

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
    ┌─ check/src/overloaded.erl:198:37
    │
198 │ overlap_neg_1(X) when is_atom(X) -> 1;
    │                                     ^ 1.
Expression has type:   number()
Context expected type: {T}

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
    ┌─ check/src/overloaded.erl:203:37
    │
203 │ overlap_neg_2(X) when is_atom(X) -> 1;
    │                                     ^ 1.
Expression has type:   number()
Context expected type: {T}

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
    ┌─ check/src/overloaded.erl:204:22
    │
204 │ overlap_neg_2(_X) -> 1.
    │                      ^ 1.
Expression has type:   number()
Context expected type: {T}

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
    ┌─ check/src/overloaded.erl:246:23
    │
246 │ take_ok_or_any(ok) -> ok;
    │                       ^^ 'ok'.
Expression has type:   'ok'
Context expected type: 'error'

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
    ┌─ check/src/overloaded.erl:247:22
    │
247 │ take_ok_or_any(_) -> error.
    │                      ^^^^^ 'error'.
Expression has type:   'error'
Context expected type: 'ok'

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
    ┌─ check/src/overloaded.erl:259:21
    │
259 │ use_over(X) -> over(X).
    │                     ^
    │                     │
    │                     X.
Expression has type:   number() | {}
Context expected type: number()
    │                     

Because in the expression's type:
  Here the type is a union type with some valid candidates: number()
  However the following candidate: {}
  Differs from the expected type:  number()

------------------------------ Detailed message ------------------------------

  number() | {} is not compatible with number()
  because
  {} is not compatible with number()

error: unbound_type_var (See https://fb.me/eqwalizer_errors#unbound_type_var)
    ┌─ check/src/overloaded.erl:261:1
    │
261 │ -type invalid() :: _T.
    │ ^^^^^^^^^^^^^^^^^^^^^ _T: Type variable is unbound.

error: reference_to_invalid_type (See https://fb.me/eqwalizer_errors#reference_to_invalid_type)
    ┌─ check/src/overloaded.erl:263:1
    │  
263 │ ╭ -spec use_invalid_neg(a) -> a;
264 │ │                  (err) -> invalid().
    │ ╰─────────────────────────────────^ use_invalid_neg/1 references type with invalid definition: invalid/0

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
    ┌─ check/src/overloaded.erl:269:14
    │
269 │     _ = swap(""),
    │              ^^
    │              │
    │              string_lit.
Expression has type:   []
Context expected type: atom() | binary()
    │              

  [] is not compatible with atom() | binary()
  because
  [] is not compatible with atom()

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
    ┌─ check/src/overloaded.erl:290:5
    │
290 │     swap(ok).
    │     ^^^^^^^^ swap('ok').
Expression has type:   binary()
Context expected type: number()

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
    ┌─ check/src/overloaded.erl:308:19
    │
308 │ reachable_3(_) -> b.
    │                   ^ 'b'.
Expression has type:   'b'
Context expected type: 'a'

15 ERRORS
