error: clause_not_covered (See https://fb.me/eqwalizer_errors#clause_not_covered)
   ┌─ check/src/iolists.erl:18:1
   │  
18 │ ╭ first(IoList)
19 │ │     when is_binary(IoList) -> IoList;
   │ ╰────────────────────────────────────^ Clause is not covered by spec

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/iolists.erl:50:18
   │
50 │ refine5(X, X) -> X.
   │                  ^
   │                  │
   │                  X.
Expression has type:   [atom() | binary()]
Context expected type: [binary()]
   │                  

Because in the expression's type:
  [
    Here the type is a union type with some valid candidates: binary()
    However the following candidate: atom()
    Differs from the expected type:  binary()
  ]

------------------------------ Detailed message ------------------------------

  [atom() | binary()] is not compatible with [binary()]
  because
  atom() | binary() is not compatible with binary()
  because
  atom() is not compatible with binary()

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/iolists.erl:55:22
   │
55 │ refine6_neg(X, X) -> X.
   │                      ^
   │                      │
   │                      X.
Expression has type:   [atom() | binary()]
Context expected type: [atom()]
   │                      

Because in the expression's type:
  [
    Here the type is a union type with some valid candidates: atom()
    However the following candidate: binary()
    Differs from the expected type:  atom()
  ]

------------------------------ Detailed message ------------------------------

  [atom() | binary()] is not compatible with [atom()]
  because
  atom() | binary() is not compatible with atom()
  because
  binary() is not compatible with atom()

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/iolists.erl:60:27
   │
60 │ refine_to_empty1(X, X) -> X.
   │                           ^
   │                           │
   │                           X.
Expression has type:   [atom()]
Context expected type: []
   │                           

Because in the expression's type:
  [
    Here the type is:     atom()
    Context expects type: none()
  ]

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/iolists.erl:83:17
   │
83 │ test2_neg(X) -> X.
   │                 ^ X.
Expression has type:   iolist()
Context expected type: 'wrong_ret'

5 ERRORS
