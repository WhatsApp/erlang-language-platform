error: clause_not_covered (See https://fb.me/eqwalizer_errors#clause_not_covered)
   ┌─ check/src/unspecced.erl:11:1
   │
11 │ expect_none(None) -> None.
   │ ^^^^^^^^^^^^^^^^^^^^^^^^^ Clause is not covered by spec

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/unspecced.erl:14:15
   │
14 │   expect_none({Id}).
   │               ^^^^ {Id}.
Expression has type:   {dynamic()}
Context expected type: none()

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/unspecced.erl:20:15
   │
20 │   expect_none(Res).
   │               ^^^ Res.
Expression has type:   #{dynamic() => {dynamic()}}
Context expected type: none()

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/unspecced.erl:24:15
   │
24 │   expect_none({Id}).
   │               ^^^^ {Id}.
Expression has type:   {dynamic()}
Context expected type: none()

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/unspecced.erl:28:15
   │
28 │   expect_none({Res}).
   │               ^^^^^ {Res}.
Expression has type:   {#{id := number(), dynamic() => dynamic()}}
Context expected type: none()

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/unspecced.erl:32:15
   │
32 │   expect_none(Res).
   │               ^^^ Res.
Expression has type:   {dynamic(), dynamic([term()])}
Context expected type: none()

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/unspecced.erl:36:15
   │
36 │   expect_none(Res).
   │               ^^^ Res.
Expression has type:   {dynamic()}
Context expected type: none()

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/unspecced.erl:41:18
   │
41 │   atom_to_binary(Rec#rec.id).
   │                  ^^^^^^^^^^ ...#rec.id.
Expression has type:   number()
Context expected type: atom()

8 ERRORS
