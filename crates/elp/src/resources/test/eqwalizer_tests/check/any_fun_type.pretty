error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/any_fun_type.erl:46:21
   │
46 │ to_f_any_neg2(F) -> F.
   │                     ^
   │                     │
   │                     F.
Expression has type:   'f0' | fun((atom()) -> pid()) | 'f1'
Context expected type: fun()
   │                     

Because in the expression's type:
  Here the type is a union type with some valid candidates: fun((atom()) -> pid())
  However the following candidate: 'f0'
  Differs from the expected type:  fun()

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/any_fun_type.erl:49:23
   │
49 │ f_any_to_f0_neg(F) -> F.
   │                       ^ F.
Expression has type:   fun()
Context expected type: 'f0'

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/any_fun_type.erl:61:31
   │
61 │     when is_function(F, 1) -> F.
   │                               ^
   │                               │
   │                               F.
Expression has type:   fun((term()) -> term())
Context expected type: f2()
   │                               

Because in the expression's type:
  Here the type is:     fun((term()) -> term())
  Context expects type: fun((term(), term()) -> term())

------------------------------ Detailed message ------------------------------

  fun((term()) -> term()) is not compatible with f2()
  because
  fun((term()) -> term()) is not compatible with fun((term(), term()) -> term())

error: clause_not_covered (See https://fb.me/eqwalizer_errors#clause_not_covered)
   ┌─ check/src/any_fun_type.erl:64:1
   │
64 │ a_to_a(a) -> a.
   │ ^^^^^^^^^^^^^^ Clause is not covered by spec

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/any_fun_type.erl:92:24
   │
92 │ f5_to_f4_cov_neg(F) -> F.
   │                        ^
   │                        │
   │                        F.
Expression has type:   f5('a' | 'b')
Context expected type: f4('a')
   │                        

Because in the expression's type:
  fun((term()) ->
    Here the type is a union type with some valid candidates: 'a'
    However the following candidate: 'b'
    Differs from the expected type:  'a'
  )

------------------------------ Detailed message ------------------------------

  f5('a' | 'b') is not compatible with f4('a')
  because
  fun((term()) -> 'a' | 'b') is not compatible with f4('a')
  because
  fun((term()) -> 'a' | 'b') is not compatible with fun((...) -> 'a')
  because
  'a' | 'b' is not compatible with 'a'

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/any_fun_type.erl:98:20
   │
98 │ apply_f4_neg(F) -> F(a).
   │                    ^^^^ F('a').
Expression has type:   number()
Context expected type: boolean()

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
    ┌─ check/src/any_fun_type.erl:113:22
    │
113 │ fun3_to_f4_neg(F) -> F.
    │                      ^
    │                      │
    │                      F.
Expression has type:   fun((term()) -> 'a' | 'b')
Context expected type: f4('a')
    │                      

Because in the expression's type:
  fun((term()) ->
    Here the type is a union type with some valid candidates: 'a'
    However the following candidate: 'b'
    Differs from the expected type:  'a'
  )

------------------------------ Detailed message ------------------------------

  fun((term()) -> 'a' | 'b') is not compatible with f4('a')
  because
  fun((term()) -> 'a' | 'b') is not compatible with fun((...) -> 'a')
  because
  'a' | 'b' is not compatible with 'a'
  because
  'b' is not compatible with 'a'

7 ERRORS
