error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/case_predicates.erl:13:24
   │
13 │     {true, true} -> aa(X, Y);
   │                        ^ X.
Expression has type:   term()
Context expected type: atom()

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/case_predicates.erl:13:27
   │
13 │     {true, true} -> aa(X, Y);
   │                           ^ Y.
Expression has type:   term()
Context expected type: atom()

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/case_predicates.erl:14:20
   │
14 │     {true, _} -> a(X);
   │                    ^ X.
Expression has type:   term()
Context expected type: atom()

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/case_predicates.erl:15:20
   │
15 │     {_, true} -> a(Y);
   │                    ^ Y.
Expression has type:   term()
Context expected type: atom()

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/case_predicates.erl:16:10
   │
16 │     _ -> not-ok
   │          ^^^^^^ not _.
Expression has type:   boolean()
Context expected type: 'ok' | 'not_ok'

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/case_predicates.erl:16:13
   │
16 │     _ -> not-ok
   │             ^^^ - _.
Expression has type:   number()
Context expected type: boolean()

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/case_predicates.erl:16:14
   │
16 │     _ -> not-ok
   │              ^^ 'ok'.
Expression has type:   'ok'
Context expected type: number()

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
    ┌─ check/src/case_predicates.erl:124:14
    │
124 │     false -> {p, X}
    │              ^^^^^^
    │              │
    │              {'p', X}.
Expression has type:   {'p', none() | pid() | reference()}
Context expected type: {'a', atom()} | {'p', pid()}
    │              

Because in the expression's type:
  { 'p', 
    Here the type is a union type with some valid candidates: pid()
    However the following candidate: reference()
    Differs from the expected type:  pid()
  }

------------------------------ Detailed message ------------------------------

  {'p', none() | pid() | reference()} is not compatible with {'a', atom()} | {'p', pid()}
  because
  at tuple index 2:
  {'p', none() | pid() | reference()} is not compatible with {'p', pid()}
  because
  none() | pid() | reference() is not compatible with pid()
  because
  reference() is not compatible with pid()

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
    ┌─ check/src/case_predicates.erl:144:10
    │
144 │     _ -> X
    │          ^
    │          │
    │          X.
Expression has type:   'undefined' | none() | 'restarting'
Context expected type: {'p', pid()} | 'undefined'
    │          

Because in the expression's type:
  Here the type is a union type with some valid candidates: 'undefined'
  However the following candidate: 'restarting'
  Differs from the expected type:  {'p', pid()} | 'undefined'

------------------------------ Detailed message ------------------------------

  'undefined' | none() | 'restarting' is not compatible with {'p', pid()} | 'undefined'
  because
  'restarting' is not compatible with {'p', pid()} | 'undefined'
  because
  'restarting' is not compatible with {'p', pid()}

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
    ┌─ check/src/case_predicates.erl:174:16
    │
174 │   lists:nth(1, L).
    │                ^
    │                │
    │                L.
Expression has type:   #{dynamic() => dynamic()} | none()
Context expected type: [T]
    │                

Because in the expression's type:
  Here the type is:     #{dynamic() => dynamic()}
  Context expects type: [T]

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
    ┌─ check/src/case_predicates.erl:174:16
    │
174 │   lists:nth(1, L).
    │                ^
    │                │
    │                L.
Expression has type:   #{dynamic() => dynamic()} | none()
Context expected type: [dynamic()]
    │                

Because in the expression's type:
  Here the type is:     #{dynamic() => dynamic()}
  Context expects type: [dynamic()]

11 ERRORS
