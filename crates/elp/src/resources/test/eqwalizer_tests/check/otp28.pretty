error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/otp28.erl:16:21
   │
16 │ mk_nominal_neg() -> warning.
   │                     ^^^^^^^
   │                     │
   │                     'warning'.
Expression has type:   'warning'
Context expected type: foo()
   │                     

Because in the expression's type:
  Here the type is:     'warning'
  Context expects type: 'ok' | 'error'
  No candidate matches in the expected union.

------------------------------ Detailed message ------------------------------

  'warning' is not compatible with foo()
  because
  'warning' is not compatible with 'ok' | 'error'
  because
  'warning' is not compatible with 'ok'

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/otp28.erl:28:5
   │
28 │     [N || {_, N} <:- L].
   │     ^^^^^^^^^^^^^^^^^^^
   │     │
   │     [ || ].
Expression has type:   [number()]
Context expected type: [atom()]
   │     

Because in the expression's type:
  [
    Here the type is:     number()
    Context expects type: atom()
  ]

------------------------------ Detailed message ------------------------------

  [number()] is not compatible with [atom()]
  because
  number() is not compatible with atom()

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/otp28.erl:40:5
   │
40 │     [Bin || _ := {error, Bin} <:- L].
   │     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   │     │
   │     [ || ].
Expression has type:   [binary()]
Context expected type: [pid()]
   │     

Because in the expression's type:
  [
    Here the type is:     binary()
    Context expects type: pid()
  ]

------------------------------ Detailed message ------------------------------

  [binary()] is not compatible with [pid()]
  because
  binary() is not compatible with pid()

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/otp28.erl:52:5
   │
52 │     #{K => Bin || {K, {ok, Bin}} <:- L}.
   │     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ #{ || }.
Expression has type:   #{atom() => binary()}
Context expected type: [#{atom() => pid()}]

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/otp28.erl:60:5
   │
60 │     [{A, B} || A <- As && B <- Bs].
   │     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   │     │
   │     [ || ].
Expression has type:   [{atom(), binary()}]
Context expected type: [{atom(), atom()}]
   │     

Because in the expression's type:
  [
    { atom(), 
      Here the type is:     binary()
      Context expects type: atom()
    }
  ]

------------------------------ Detailed message ------------------------------

  [{atom(), binary()}] is not compatible with [{atom(), atom()}]
  because
  at tuple index 2:
  {atom(), binary()} is not compatible with {atom(), atom()}
  because
  binary() is not compatible with atom()

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/otp28.erl:68:5
   │
68 │     #{A => B || A <- As && B <- Bs}.
   │     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   │     │
   │     #{ || }.
Expression has type:   #{atom() => binary()}
Context expected type: #{atom() => atom()}
   │     

Because in the expression's type:
  #{ atom() =>
    Here the type is:     binary()
    Context expects type: atom()
  , ... }

------------------------------ Detailed message ------------------------------

  #{atom() => binary()} is not compatible with #{atom() => atom()}
  the default associations are not compatible
  because
  binary() is not compatible with atom()

error: incompatible_types (See https://fb.me/eqwalizer_errors#incompatible_types)
   ┌─ check/src/otp28.erl:76:5
   │
76 │     [{A, B, V, K} || A <- As && B <- Bs && K := V <- M].
   │     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   │     │
   │     [ || ].
Expression has type:   [{atom(), binary(), binary(), atom()}]
Context expected type: [{atom(), binary(), atom(), binary()}]
   │     

Because in the expression's type:
  [
    { atom(), binary(), 
      Here the type is:     binary()
      Context expects type: atom()
    , atom()}
  ]

------------------------------ Detailed message ------------------------------

  [{atom(), binary(), binary(), atom()}] is not compatible with [{atom(), binary(), atom(), binary()}]
  because
  at tuple index 3:
  {atom(), binary(), binary(), atom()} is not compatible with {atom(), binary(), atom(), binary()}
  because
  binary() is not compatible with atom()

7 ERRORS
