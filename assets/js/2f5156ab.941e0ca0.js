"use strict";(self.webpackChunkstaticdocs_starter=self.webpackChunkstaticdocs_starter||[]).push([[6465],{67138:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"erlang-error-index/w/W0000","title":"W0000 - Bound Variable in Pattern","description":"Error","source":"@site/docs/erlang-error-index/w/W0000.md","sourceDirName":"erlang-error-index/w","slug":"/erlang-error-index/w/W0000","permalink":"/erlang-language-platform/docs/erlang-error-index/w/W0000","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"sidebar_position":0},"sidebar":"tutorialSidebar","previous":{"title":"About","permalink":"/erlang-language-platform/docs/erlang-error-index/w/about"},"next":{"title":"W0001 - Module Mismatch","permalink":"/erlang-language-platform/docs/erlang-error-index/w/W0001"}}');var a=r(74848),i=r(28453);const o={sidebar_position:0},s="W0000 - Bound Variable in Pattern",l={},d=[{value:"Error",id:"error",level:2},{value:"Explanation",id:"explanation",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"w0000---bound-variable-in-pattern",children:"W0000 - Bound Variable in Pattern"})}),"\n",(0,a.jsx)(n.h2,{id:"error",children:"Error"}),"\n",(0,a.jsx)(n.admonition,{type:"caution",children:(0,a.jsxs)(n.p,{children:["This error code is not emitted any longer. ",(0,a.jsx)(n.a,{href:"/erlang-language-platform/docs/feature-gallery#semantic-syntax-highlighting",children:"Semantic tokens"})," are used instead."]})}),"\n",(0,a.jsx)(n.h2,{id:"explanation",children:"Explanation"}),"\n",(0,a.jsxs)(n.p,{children:["Inspired by Elixir's ",(0,a.jsx)(n.a,{href:"https://elixir-lang.org/getting-started/pattern-matching.html#the-pin-operator",children:"pinning operator"}),", this diagnostic marks variables in patterns, if they are already bound. This can be problematic if the binding is not intentional and it can lead to subtle bugs."]}),"\n",(0,a.jsx)(n.p,{children:"Consider the following code snippet:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-erlang",metastring:"showLineNumbers",children:"handle_request(Message) ->\n  case next_action() of\n    {send, Message} ->\n      ...\n    {error, Error}\n      ...\n  end\n"})}),"\n",(0,a.jsxs)(n.p,{children:["The pattern on line ",(0,a.jsx)(n.code,{children:"3"})," will only be matched if and only if the ",(0,a.jsx)(n.code,{children:"Message"})," returned by the call to ",(0,a.jsx)(n.code,{children:"next_action/1"})," is the same as the one on line ",(0,a.jsx)(n.code,{children:"1"}),". This behaviour could be intentional or not. If not, it can easily lead to bugs."]}),"\n",(0,a.jsx)(n.p,{children:"An alternative, more explicit, way to express that behaviour - when intentional - could be:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-erlang",metastring:"showLineNumbers",children:"handle_request(Message) ->\n  case next_action() of\n    {send, ActionMessage} when ActionMessage =:= Message ->\n      ...\n    {error, Error}\n      ...\n  end\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>s});var t=r(96540);const a={},i=t.createContext(a);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);