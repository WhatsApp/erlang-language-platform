"use strict";(self.webpackChunkstaticdocs_starter=self.webpackChunkstaticdocs_starter||[]).push([[3800],{15680:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>m,MDXProvider:()=>s,mdx:()=>x,useMDXComponents:()=>u,withMDXComponents:()=>p});var r=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(){return i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},i.apply(this,arguments)}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var m=r.createContext({}),p=function(e){return function(t){var n=u(t.components);return r.createElement(e,i({},t,{components:n}))}},u=function(e){var t=r.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(m.Provider,{value:t},e.children)},c="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,m=d(e,["components","mdxType","originalType","parentName"]),p=u(n),s=a,c=p["".concat(l,".").concat(s)]||p[s]||f[s]||i;return n?r.createElement(c,o(o({ref:t},m),{},{components:n})):r.createElement(c,o({ref:t},m))}));function x(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=g;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o[c]="string"==typeof e?e:a,l[1]=o;for(var m=2;m<i;m++)l[m]=n[m];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},8502:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>s,frontMatter:()=>i,metadata:()=>o,toc:()=>m});var r=n(58168),a=(n(96540),n(15680));const i={sidebar_position:4},l="The .elp.toml Configuration File",o={unversionedId:"get-started/configure-project/elp-toml",id:"get-started/configure-project/elp-toml",title:"The .elp.toml Configuration File",description:"A .elp.toml configuration file can be added to a project's root directory to",source:"@site/docs/get-started/configure-project/elp-toml.md",sourceDirName:"get-started/configure-project",slug:"/get-started/configure-project/elp-toml",permalink:"/erlang-language-platform/docs/get-started/configure-project/elp-toml",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Custom Project",permalink:"/erlang-language-platform/docs/get-started/configure-project/custom-project"},next:{title:"Get Support",permalink:"/erlang-language-platform/docs/get-started/support"}},d={},m=[{value:"A Sample <code>.elp.toml</code> Configuration File",id:"a-sample-elptoml-configuration-file",level:2},{value:"Configuration Sections",id:"configuration-sections",level:2},{value:"[build_info]",id:"build_info",level:3},{value:"[eqwalizer]",id:"eqwalizer",level:3},{value:"[buck]",id:"buck",level:3},{value:"[rebar]",id:"rebar",level:3}],p={toc:m},u="wrapper";function s(e){let{components:t,...n}=e;return(0,a.mdx)(u,(0,r.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"the-elptoml-configuration-file"},"The ",(0,a.mdx)("inlineCode",{parentName:"h1"},".elp.toml")," Configuration File"),(0,a.mdx)("p",null,"A ",(0,a.mdx)("inlineCode",{parentName:"p"},".elp.toml")," configuration file can be added to a project's root directory to\ncustomize the behaviour of ELP for a given project."),(0,a.mdx)("p",null,"The file can also be used as ",(0,a.mdx)("strong",{parentName:"p"},"an absolute marker for the root of an ELP\nproject"),", If one is found - and it contains all the required information -, ELP\nwill not perform any upward auto-discovery for the structure of a project."),(0,a.mdx)("h2",{id:"a-sample-elptoml-configuration-file"},"A Sample ",(0,a.mdx)("inlineCode",{parentName:"h2"},".elp.toml")," Configuration File"),(0,a.mdx)("p",null,"Here is an example of a full ",(0,a.mdx)("inlineCode",{parentName:"p"},".elp.toml")," file. All sections are optional. The\n",(0,a.mdx)("a",{parentName:"p",href:"#empty-section"},"build_info")," can be used to mark the root of a project (via\nthe ",(0,a.mdx)("inlineCode",{parentName:"p"},"build_info")," property). The available configuration sections are described\nbelow."),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-toml"},'[build_info]\nfile = "my_hand_crafted_build_info.json"\n\n[eqwalizer]\nenable_all = true\nmax_tasks = 32\n\n[buck]\nenabled = false\n\n[rebar]\nprofile = "test"\n')),(0,a.mdx)("h2",{id:"configuration-sections"},"Configuration Sections"),(0,a.mdx)("h3",{id:"build_info"},"[","build","_","info","]"),(0,a.mdx)("p",null,"This section is used to configure project discovery."),(0,a.mdx)("table",null,(0,a.mdx)("thead",{parentName:"table"},(0,a.mdx)("tr",{parentName:"thead"},(0,a.mdx)("th",{parentName:"tr",align:null},"Key"),(0,a.mdx)("th",{parentName:"tr",align:null},"Type"),(0,a.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,a.mdx)("tbody",{parentName:"table"},(0,a.mdx)("tr",{parentName:"tbody"},(0,a.mdx)("td",{parentName:"tr",align:null},"file"),(0,a.mdx)("td",{parentName:"tr",align:null},"String"),(0,a.mdx)("td",{parentName:"tr",align:null},"Path to a JSON file describing the project. This is only honoured if ",(0,a.mdx)("inlineCode",{parentName:"td"},"buck.enabled")," is ",(0,a.mdx)("inlineCode",{parentName:"td"},"false")," or missing. The format of the JSON file is described in the ",(0,a.mdx)("a",{parentName:"td",href:"#the-build_infojson-format"},"build_info.json")," section.")),(0,a.mdx)("tr",{parentName:"tbody"},(0,a.mdx)("td",{parentName:"tr",align:null},"apps"),(0,a.mdx)("td",{parentName:"tr",align:null},"String"),(0,a.mdx)("td",{parentName:"tr",align:null},"A string pattern used to generate the applications for the ",(0,a.mdx)("inlineCode",{parentName:"td"},"build_info.json")," configuration. Unused if ",(0,a.mdx)("inlineCode",{parentName:"td"},"file")," is specified. E.g. ",(0,a.mdx)("inlineCode",{parentName:"td"},"apps/*"))),(0,a.mdx)("tr",{parentName:"tbody"},(0,a.mdx)("td",{parentName:"tr",align:null},"deps"),(0,a.mdx)("td",{parentName:"tr",align:null},"String"),(0,a.mdx)("td",{parentName:"tr",align:null},"A string pattern used to generate the dependencies for the ",(0,a.mdx)("inlineCode",{parentName:"td"},"build_info.json")," configuration. Unused if ",(0,a.mdx)("inlineCode",{parentName:"td"},"file")," is specified. E.g. ",(0,a.mdx)("inlineCode",{parentName:"td"},"deps/*"))))),(0,a.mdx)("h3",{id:"eqwalizer"},"[","eqwalizer","]"),(0,a.mdx)("p",null,"ELP is integrated with the ",(0,a.mdx)("a",{parentName:"p",href:"https://github.com/whatsapp/eqwalizer"},"eqWAlizer"),"\ntype checker. The integration can be configured via this section."),(0,a.mdx)("admonition",{type:"info"},(0,a.mdx)("p",{parentName:"admonition"},"By default eqWAlizer is enabled on all non-test modules. It is also disabled for\nmodules containing the ",(0,a.mdx)("inlineCode",{parentName:"p"},"@generated")," keyword within their first 2000 characters.\nThis can be overriden per module via the following attributes:"),(0,a.mdx)("ul",{parentName:"admonition"},(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"-eqwalizer(ignore).")," Opt-out module unconditionally"),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"-typing([eqwalizer]).")," Opt-in unconditionally, even for test modules"))),(0,a.mdx)("table",null,(0,a.mdx)("thead",{parentName:"table"},(0,a.mdx)("tr",{parentName:"thead"},(0,a.mdx)("th",{parentName:"tr",align:null},"Key"),(0,a.mdx)("th",{parentName:"tr",align:null},"Type"),(0,a.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,a.mdx)("tbody",{parentName:"table"},(0,a.mdx)("tr",{parentName:"tbody"},(0,a.mdx)("td",{parentName:"tr",align:null},"enabled_all"),(0,a.mdx)("td",{parentName:"tr",align:null},"Boolean"),(0,a.mdx)("td",{parentName:"tr",align:null},"Disable eqwalizer for all modules by default, but still honours the module-specific overrides listed above")),(0,a.mdx)("tr",{parentName:"tbody"},(0,a.mdx)("td",{parentName:"tr",align:null},"max_tasks"),(0,a.mdx)("td",{parentName:"tr",align:null},"Integer"),(0,a.mdx)("td",{parentName:"tr",align:null},"Max number of parallel eqWAlizer tasks, defaults to 4 (eqWAlizer instances are memory intensive). This only applies to using eqWAlizer from the CLI.")))),(0,a.mdx)("h3",{id:"buck"},"[","buck","]"),(0,a.mdx)("p",null,"Configure the interaction between ELP and the ",(0,a.mdx)("a",{parentName:"p",href:"https://buck2.build/"},"Buck2"),"\nbuild tool. See ",(0,a.mdx)("a",{parentName:"p",href:"https://youtu.be/4ALgsBqNBhQ"},"this presentation")," for details\nabout Erlang support for Buck2."),(0,a.mdx)("table",null,(0,a.mdx)("thead",{parentName:"table"},(0,a.mdx)("tr",{parentName:"thead"},(0,a.mdx)("th",{parentName:"tr",align:null},"Key"),(0,a.mdx)("th",{parentName:"tr",align:null},"Type"),(0,a.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,a.mdx)("tbody",{parentName:"table"},(0,a.mdx)("tr",{parentName:"tbody"},(0,a.mdx)("td",{parentName:"tr",align:null},"enabled"),(0,a.mdx)("td",{parentName:"tr",align:null},"Boolean"),(0,a.mdx)("td",{parentName:"tr",align:null},"Discover the project using Buck2")))),(0,a.mdx)("admonition",{type:"warning"},(0,a.mdx)("p",{parentName:"admonition"},"The github version is not built with buck2 support enabled. This will\nchange soon, once we tweak the tests.")),(0,a.mdx)("h3",{id:"rebar"},"[","rebar","]"),(0,a.mdx)("p",null,"Configure ELP for ",(0,a.mdx)("a",{parentName:"p",href:"https://rebar3.org/"},"rebar3"),"-based projects."),(0,a.mdx)("table",null,(0,a.mdx)("thead",{parentName:"table"},(0,a.mdx)("tr",{parentName:"thead"},(0,a.mdx)("th",{parentName:"tr",align:null},"Key"),(0,a.mdx)("th",{parentName:"tr",align:null},"Type"),(0,a.mdx)("th",{parentName:"tr",align:null},"Description"),(0,a.mdx)("th",{parentName:"tr",align:null},"Default"))),(0,a.mdx)("tbody",{parentName:"table"},(0,a.mdx)("tr",{parentName:"tbody"},(0,a.mdx)("td",{parentName:"tr",align:null},"profile"),(0,a.mdx)("td",{parentName:"tr",align:null},"String"),(0,a.mdx)("td",{parentName:"tr",align:null},"The ",(0,a.mdx)("inlineCode",{parentName:"td"},"rebar3")," profile to use for project discovery. Only used if the ",(0,a.mdx)("inlineCode",{parentName:"td"},"file")," property is specified in the ",(0,a.mdx)("a",{parentName:"td",href:"#build-info"},"build_info")," section."),(0,a.mdx)("td",{parentName:"tr",align:null},"test")))))}s.isMDXComponent=!0}}]);