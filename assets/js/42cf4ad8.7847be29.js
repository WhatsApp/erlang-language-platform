"use strict";(self.webpackChunkstaticdocs_starter=self.webpackChunkstaticdocs_starter||[]).push([[2647],{15680:(e,n,t)=>{t.r(n),t.d(n,{MDXContext:()=>d,MDXProvider:()=>m,mdx:()=>y,useMDXComponents:()=>c,withMDXComponents:()=>s});var r=t(96540);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(){return a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},a.apply(this,arguments)}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,l=function(e,n){if(null==e)return{};var t,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var d=r.createContext({}),s=function(e){return function(n){var t=c(n.components);return r.createElement(e,a({},n,{components:t}))}},c=function(e){var n=r.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},m=function(e){var n=c(e.components);return r.createElement(d.Provider,{value:n},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,l=e.mdxType,a=e.originalType,i=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),s=c(t),m=l,u=s["".concat(i,".").concat(m)]||s[m]||f[m]||a;return t?r.createElement(u,o(o({ref:n},d),{},{components:t})):r.createElement(u,o({ref:n},d))}));function y(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var a=t.length,i=new Array(a);i[0]=g;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o[u]="string"==typeof e?e:l,i[1]=o;for(var d=2;d<a;d++)i[d]=t[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},72799:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var r=t(58168),l=(t(96540),t(15680));const a={sidebar_position:3},i="The ELP CLI",o={unversionedId:"get-started/cli",id:"get-started/cli",title:"The ELP CLI",description:"ELP can be used from the command line. Please ensure you read the install section to learn how to install it.",source:"@site/docs/get-started/cli.md",sourceDirName:"get-started",slug:"/get-started/cli",permalink:"/erlang-language-platform/docs/get-started/cli",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Install ELP",permalink:"/erlang-language-platform/docs/get-started/install"},next:{title:"Configure Your Editor",permalink:"/erlang-language-platform/docs/get-started/editors/"}},p={},d=[{value:"Verify <code>elp</code> is correctly installed",id:"verify-elp-is-correctly-installed",level:2},{value:"Getting Help",id:"getting-help",level:2},{value:"<code>elp server</code>",id:"elp-server",level:2},{value:"<code>elp eqwalize</code>",id:"elp-eqwalize",level:2},{value:"<code>elp eqwalize-all</code>",id:"elp-eqwalize-all",level:2}],s={toc:d},c="wrapper";function m(e){let{components:n,...t}=e;return(0,l.mdx)(c,(0,r.A)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,l.mdx)("h1",{id:"the-elp-cli"},"The ELP CLI"),(0,l.mdx)("p",null,"ELP can be used from the command line. Please ensure you read the ",(0,l.mdx)("a",{parentName:"p",href:"/erlang-language-platform/docs/get-started/install"},"install")," section to learn how to install it."),(0,l.mdx)("h2",{id:"verify-elp-is-correctly-installed"},"Verify ",(0,l.mdx)("inlineCode",{parentName:"h2"},"elp")," is correctly installed"),(0,l.mdx)("admonition",{type:"tip"},(0,l.mdx)("p",{parentName:"admonition"},'On Mac you may get a warning, saying "elp cannot be opened because the developer cannot be verified". To solve this, go to ',(0,l.mdx)("inlineCode",{parentName:"p"},"Preferences -> Security and Privacy -> General")," and add an exception for ",(0,l.mdx)("inlineCode",{parentName:"p"},"elp"),". Alternatively, you can build the project from source (see below)")),(0,l.mdx)("p",null,"Open a terminal and run:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre"},"$ elp version\n")),(0,l.mdx)("p",null,"You should see something like:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre"},"elp 1.1.0+build-2024-01-18\n")),(0,l.mdx)("p",null,"If that's the case, you're ready to roll!"),(0,l.mdx)("h2",{id:"getting-help"},"Getting Help"),(0,l.mdx)("p",null,"All ",(0,l.mdx)("inlineCode",{parentName:"p"},"elp")," commands are available through the help:"),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre"},"$ elp -h\n\nUsage: [--log-file LOG_FILE] [--no-log-buffering] [COMMAND ...]\n\nAvailable options:\n        --log-file <LOG_FILE>\n        --no-log-buffering\n    -h, --help                 Prints help information\n\nAvailable commands:\n    eqwalize              Eqwalize specified module\n    eqwalize-all          Eqwalize all opted-in modules in a project\n    eqwalize-app          Eqwalize all opted-in modules in specified application\n    eqwalize-target       Eqwalize all opted-in modules in specified buck target\n    lint                  Parse files in project and emit diagnostics, optionally apply fixes.\n    server                Run lsp server\n    generate-completions  Generate shell completions\n    parse-all             Dump ast for all files in a project for specified rebar.config file\n    parse-elp             Tree-sitter parse all files in a project for specified rebar.config file\n    build-info            Generate build info file\n    version               Print version\n    shell                 Starts an interactive ELP shell\n    eqwalize-stats        Return statistics about code quality for eqWAlizer\n    explain               Explain a diagnostic code\n    project-info          Generate project info file\n    glean                 Glean indexer\n")),(0,l.mdx)("h2",{id:"elp-server"},(0,l.mdx)("inlineCode",{parentName:"h2"},"elp server")),(0,l.mdx)("p",null,"Start a LSP server. The command does not return."),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre"},"$ elp server\n")),(0,l.mdx)("h2",{id:"elp-eqwalize"},(0,l.mdx)("inlineCode",{parentName:"h2"},"elp eqwalize")),(0,l.mdx)("p",null,"Run the ",(0,l.mdx)("em",{parentName:"p"},"eqWAlizer")," typechecker against an Erlang module."),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre"},"$ elp eqwalize <module>\n")),(0,l.mdx)("h2",{id:"elp-eqwalize-all"},(0,l.mdx)("inlineCode",{parentName:"h2"},"elp eqwalize-all")),(0,l.mdx)("p",null,"Run the ",(0,l.mdx)("em",{parentName:"p"},"eqWAlizer")," typechecker against all ",(0,l.mdx)("em",{parentName:"p"},"src")," modules in a project."),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre"},"$ elp eqwalize-all\n")))}m.isMDXComponent=!0}}]);