"use strict";(self.webpackChunkstaticdocs_starter=self.webpackChunkstaticdocs_starter||[]).push([[6498],{96556:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"erlang-error-index/w/W0035","title":"W0035 - Unnecessary lists:fold/3 to build map","description":"Warning","source":"@site/docs/erlang-error-index/w/W0035.md","sourceDirName":"erlang-error-index/w","slug":"/erlang-error-index/w/W0035","permalink":"/erlang-language-platform/docs/erlang-error-index/w/W0035","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":35,"frontMatter":{"sidebar_position":35},"sidebar":"tutorialSidebar","previous":{"title":"W0034 - Unnecessary intermediate list in comprehension over map","permalink":"/erlang-language-platform/docs/erlang-error-index/w/W0034"},"next":{"title":"W0036 - Unnecessary maps:from_list/1 around comprehension","permalink":"/erlang-language-platform/docs/erlang-error-index/w/W0036"}}');var i=r(74848),t=r(28453);const a={sidebar_position:35},o="W0035 - Unnecessary lists:fold/3 to build map",l={},c=[{value:"Warning",id:"warning",level:2},{value:"Explanation",id:"explanation",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsxs)(n.h1,{id:"w0035---unnecessary-listsfold3-to-build-map",children:["W0035 - Unnecessary ",(0,i.jsx)(n.code,{children:"lists:fold/3"})," to build map"]})}),"\n",(0,i.jsx)(n.h2,{id:"warning",children:"Warning"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-erlang",children:"main(List) ->\n    lists:foldl(fun(K, Acc) -> Acc#{K => []} end, #{}, List).\n%%  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ \ud83d\udca1 information: Unnecessary explicit fold to construct map from list.\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-erlang",children:"main(List) ->\n    lists:foldl(fun({K,V}, Acc) -> Acc#{K => V} end, #{}, List).\n%%  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ \ud83d\udca1 information: Unnecessary explicit fold to construct map from list.\n"})}),"\n",(0,i.jsx)(n.h2,{id:"explanation",children:"Explanation"}),"\n",(0,i.jsx)(n.p,{children:"The warning message indicates an unidiomatic and sub-optimal way to build a map\nfrom a list."}),"\n",(0,i.jsx)(n.p,{children:"Whilst the fold will correctly construct a map from the given list, it is less\nefficient than it could be, since a BIF exists which can directly construct\nthe required map."}),"\n",(0,i.jsxs)(n.p,{children:["Using the ",(0,i.jsx)(n.code,{children:"maps:from_keys/2"})," or ",(0,i.jsx)(n.code,{children:"maps:from_list/1"})," BIFs (depending on whether the list\nis of just keys or of key-value pairs, respectively), is clearer and more performant."]}),"\n",(0,i.jsxs)(n.p,{children:["To fix this warning, the the BIFs from the ",(0,i.jsx)(n.code,{children:"maps"})," module to construct your map directly:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-erlang",children:"main(List) ->\n    maps:from_list(List). % For lists of key-value pairs\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-erlang",children:"main(List) ->\n    maps:from_keys(List, []). % For lists of just keys, where every key is given the same value\n"})})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>o});var s=r(96540);const i={},t=s.createContext(i);function a(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);