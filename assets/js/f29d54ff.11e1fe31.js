"use strict";(self.webpackChunkstaticdocs_starter=self.webpackChunkstaticdocs_starter||[]).push([[407],{48651:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"erlang-error-index/w/W0055","title":"W0055 - Could be a string literal","description":"Information","source":"@site/docs/erlang-error-index/w/W0055.md","sourceDirName":"erlang-error-index/w","slug":"/erlang-error-index/w/W0055","permalink":"/erlang-language-platform/docs/erlang-error-index/w/W0055","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":55,"frontMatter":{"sidebar_position":55},"sidebar":"tutorialSidebar","previous":{"title":"W0054 - Do not suppress compiler warnings at module level","permalink":"/erlang-language-platform/docs/erlang-error-index/w/W0054"}}');var o=r(74848),i=r(28453);const a={sidebar_position:55},s="W0055 - Could be a string literal",l={},d=[{value:"Information",id:"information",level:2},{value:"Fix",id:"fix",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"w0055---could-be-a-string-literal",children:"W0055 - Could be a string literal"})}),"\n",(0,o.jsx)(n.h2,{id:"information",children:"Information"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-erlang",children:'-module(example).\n\nfoo() ->\n    atom_to_list(foo).\n%%  ^^^^^^^^^^^^^^^^^ \ud83d\udca1 information: Could be rewritten as a string literal.\n\nbar() ->\n    atom_to_binary(bar).\n%%  ^^^^^^^^^^^^^^^^^^^ \ud83d\udca1 information: Could be rewritten as a binary string literal.\n\nbaz() ->\n    list_to_atom("baz").\n%%  ^^^^^^^^^^^^^^^^^^^ \ud83d\udca1 information: Could be rewritten as an atom literal.\n'})}),"\n",(0,o.jsx)(n.p,{children:"This diagnostic is triggered when a string or atom literal is immediately converted to a\ndifferent string or atom type."}),"\n",(0,o.jsx)(n.p,{children:"Whilst the compiler will often optimise these conversions away, it is still good practice to\nto use the literal type that is most appropriate for the context in order to keep the code\nclear and concise."}),"\n",(0,o.jsx)(n.h2,{id:"fix",children:"Fix"}),"\n",(0,o.jsx)(n.p,{children:"Rewrite the value as a literal of the appropriate type."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-erlang",children:'-module(example).\n\nfoo() ->\n    "foo".\n\nbar() ->\n    ~"bar".\n\nbaz() ->\n    baz.\n'})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>s});var t=r(96540);const o={},i=t.createContext(o);function a(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);