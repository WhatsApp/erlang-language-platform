"use strict";(self.webpackChunkstaticdocs_starter=self.webpackChunkstaticdocs_starter||[]).push([[6077],{15680:(e,r,t)=>{t.r(r),t.d(r,{MDXContext:()=>s,MDXProvider:()=>u,mdx:()=>h,useMDXComponents:()=>d,withMDXComponents:()=>p});var n=t(96540);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(){return o=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},o.apply(this,arguments)}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=n.createContext({}),p=function(e){return function(r){var t=d(r.components);return n.createElement(e,o({},r,{components:t}))}},d=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},u=function(e){var r=d(e.components);return n.createElement(s.Provider,{value:r},e.children)},m="mdxType",f={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},g=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=d(t),u=a,m=p["".concat(i,".").concat(u)]||p[u]||f[u]||o;return t?n.createElement(m,c(c({ref:r},s),{},{components:t})):n.createElement(m,c({ref:r},s))}));function h(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=g;var c={};for(var l in r)hasOwnProperty.call(r,l)&&(c[l]=r[l]);c.originalType=e,c[m]="string"==typeof e?e:a,i[1]=c;for(var s=2;s<o;s++)i[s]=t[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}g.displayName="MDXCreateElement"},12286:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var n=t(58168),a=(t(96540),t(15680));const o={sidebar_position:27},i="W0027 - Record Tuple Match",c={unversionedId:"erlang-error-index/w/W0027",id:"erlang-error-index/w/W0027",title:"W0027 - Record Tuple Match",description:"Error",source:"@site/docs/erlang-error-index/w/W0027.md",sourceDirName:"erlang-error-index/w",slug:"/erlang-error-index/w/W0027",permalink:"/erlang-language-platform/docs/erlang-error-index/w/W0027",draft:!1,tags:[],version:"current",sidebarPosition:27,frontMatter:{sidebar_position:27},sidebar:"tutorialSidebar",previous:{title:"W0026 - Unexported function",permalink:"/erlang-language-platform/docs/erlang-error-index/w/W0026"}},l={},s=[{value:"Error",id:"error",level:2},{value:"Explanation",id:"explanation",level:2}],p={toc:s},d="wrapper";function u(e){let{components:r,...t}=e;return(0,a.mdx)(d,(0,n.A)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"w0027---record-tuple-match"},"W0027 - Record Tuple Match"),(0,a.mdx)("h2",{id:"error"},"Error"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-erlang"},"-record(my_rec, {field1, field2}).\nmain(X) ->\n    {my_rec, Field1, _} = X.\n%%  ^^^^^^ warning: matching record 'my_rec' as a tuple.\n")),(0,a.mdx)("h2",{id:"explanation"},"Explanation"),(0,a.mdx)("p",null,"The warning message indicates that a record is being matched as a bare tuple."),(0,a.mdx)("p",null,"While this may be correct when the code is written, if the record is changed in future the match may fail."),(0,a.mdx)("p",null,"To fix the problem you should convert the match to record syntax."),(0,a.mdx)("p",null,"In case of false positives, the ",(0,a.mdx)("a",{parentName:"p",href:"/erlang-language-platform/docs/erlang-error-index/#ignoring-diagnostics"},"standard ",(0,a.mdx)("inlineCode",{parentName:"a"},"elp:ignore")," mechanism")," should be used. Please report this as a bug should this be the case."))}u.isMDXComponent=!0}}]);