"use strict";(self.webpackChunkstaticdocs_starter=self.webpackChunkstaticdocs_starter||[]).push([[3553],{15680:(e,t,r)=>{r.r(t),r.d(t,{MDXContext:()=>p,MDXProvider:()=>d,mdx:()=>h,useMDXComponents:()=>m,withMDXComponents:()=>c});var n=r(96540);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},a.apply(this,arguments)}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),c=function(e){return function(t){var r=m(t.components);return n.createElement(e,a({},t,{components:r}))}},m=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},d=function(e){var t=m(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=m(r),d=o,u=c["".concat(i,".").concat(d)]||c[d]||g[d]||a;return r?n.createElement(u,s(s({ref:t},p),{},{components:r})):n.createElement(u,s({ref:t},p))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},99343:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var n=r(58168),o=(r(96540),r(15680));const a={sidebar_position:2},i="Emacs",s={unversionedId:"get-started/editors/emacs",id:"get-started/editors/emacs",title:"Emacs",description:"The ELP project can be used as a language server in the Emacs text editor via the lsp-mode LSP client.",source:"@site/docs/get-started/editors/emacs.md",sourceDirName:"get-started/editors",slug:"/get-started/editors/emacs",permalink:"/erlang-language-platform/docs/get-started/editors/emacs",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Configure Your Editor",permalink:"/erlang-language-platform/docs/get-started/editors/"},next:{title:"VS Code",permalink:"/erlang-language-platform/docs/get-started/editors/vscode"}},l={},p=[{value:"Requirements",id:"requirements",level:2},{value:"<code>lsp-mode</code>",id:"lsp-mode",level:3},{value:"Configure Emacs",id:"configure-emacs",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"The following servers support current file but do not have automatic installation",id:"the-following-servers-support-current-file-but-do-not-have-automatic-installation",level:4}],c={toc:p},m="wrapper";function d(e){let{components:t,...r}=e;return(0,o.mdx)(m,(0,n.A)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"emacs"},"Emacs"),(0,o.mdx)("p",null,"The ELP project can be used as a ",(0,o.mdx)("a",{parentName:"p",href:"https://microsoft.github.io/language-server-protocol/overviews/lsp/overview/"},"language server")," in the Emacs text editor via the ",(0,o.mdx)("a",{parentName:"p",href:"https://emacs-lsp.github.io/lsp-mode/"},"lsp-mode")," LSP client."),(0,o.mdx)("h2",{id:"requirements"},"Requirements"),(0,o.mdx)("h3",{id:"lsp-mode"},(0,o.mdx)("inlineCode",{parentName:"h3"},"lsp-mode")),(0,o.mdx)("p",null,"Install the ",(0,o.mdx)("inlineCode",{parentName:"p"},"lsp-mode")," package, which is a generic Emacs client for LSP servers. You can follow ",(0,o.mdx)("a",{parentName:"p",href:"https://emacs-lsp.github.io/lsp-mode/page/installation/"},"these instructions")," to install it."),(0,o.mdx)("h2",{id:"configure-emacs"},"Configure Emacs"),(0,o.mdx)("p",null,"Add the following to your emacs ",(0,o.mdx)("inlineCode",{parentName:"p"},".emacs")," file or equivalent."),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-elisp"},"(use-package lsp-mode\n\n  :config\n  ;; Enable LSP automatically for Erlang files\n  (add-hook 'erlang-mode-hook #'lsp)\n\n  ;; ELP, added as priority 0 (> -1) so takes priority over the built-in one\n  (lsp-register-client\n   (make-lsp-client :new-connection (lsp-stdio-connection '(\"elp\" \"server\"))\n                    :major-modes '(erlang-mode)\n                    :priority 0\n                    :server-id 'erlang-language-platform))\n  )\n")),(0,o.mdx)("p",null,"For a list of available configuration option, please refer to ",(0,o.mdx)("a",{parentName:"p",href:"https://emacs-lsp.github.io/lsp-mode/page/lsp-erlang-elp/"},"this page")," and to the ",(0,o.mdx)("a",{parentName:"p",href:"https://emacs-lsp.github.io/lsp-mode/page/settings/mode/"},(0,o.mdx)("inlineCode",{parentName:"a"},"lsp-mode")," settings documentation"),"."),(0,o.mdx)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,o.mdx)("h4",{id:"the-following-servers-support-current-file-but-do-not-have-automatic-installation"},"The following servers support current file but do not have automatic installation"),(0,o.mdx)("p",null,"Ensure that the ",(0,o.mdx)("inlineCode",{parentName:"p"},"elp")," executable is available in your ",(0,o.mdx)("inlineCode",{parentName:"p"},"PATH")," via Emacs. A workaround is:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-elisp"},";; Ensure your Emacs environment looks like your user's shell one\n(package-require 'exec-path-from-shell)\n(exec-path-from-shell-initialize)\n")))}d.isMDXComponent=!0}}]);