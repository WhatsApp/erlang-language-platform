"use strict";(self.webpackChunkstaticdocs_starter=self.webpackChunkstaticdocs_starter||[]).push([[5008],{3905:(e,t,r)=>{r.r(t),r.d(t,{MDXContext:()=>s,MDXProvider:()=>d,mdx:()=>g,useMDXComponents:()=>m,withMDXComponents:()=>c});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(){return o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},o.apply(this,arguments)}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){return function(t){var r=m(t.components);return n.createElement(e,o({},t,{components:r}))}},m=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=m(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),c=m(r),d=a,u=c["".concat(l,".").concat(d)]||c[d]||f[d]||o;return r?n.createElement(u,i(i({ref:t},s),{},{components:r})):n.createElement(u,i({ref:t},s))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=y;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},9987:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var n=r(87462),a=(r(67294),r(3905));const o={sidebar_position:2},l="Install ELP",i={unversionedId:"get-started/install",id:"get-started/install",title:"Install ELP",description:"The easiest way to install to ELP is from binary. It is also possible to compile it from source.",source:"@site/docs/get-started/install.md",sourceDirName:"get-started",slug:"/get-started/install",permalink:"/erlang-language-platform/docs/get-started/install",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Get Started",permalink:"/erlang-language-platform/docs/get-started/"},next:{title:"The ELP CLI",permalink:"/erlang-language-platform/docs/get-started/cli"}},p={},s=[{value:"From Binary",id:"from-binary",level:2},{value:"From Source",id:"from-source",level:2}],c={toc:s},m="wrapper";function d(e){let{components:t,...r}=e;return(0,a.mdx)(m,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"install-elp"},"Install ELP"),(0,a.mdx)("p",null,"The easiest way to install to ELP is ",(0,a.mdx)("a",{parentName:"p",href:"#from-binary"},"from binary"),". It is also possible to compile it ",(0,a.mdx)("a",{parentName:"p",href:"#from-source"},"from source"),"."),(0,a.mdx)("h2",{id:"from-binary"},"From Binary"),(0,a.mdx)("p",null,"Visit our ",(0,a.mdx)("a",{parentName:"p",href:"https://github.com/WhatsApp/erlang-language-platform/releases"},"releases")," page and download the ",(0,a.mdx)("inlineCode",{parentName:"p"},"elp")," tarball for the latest releases."),(0,a.mdx)("p",null,"Packages are available in the ",(0,a.mdx)("em",{parentName:"p"},"Assets")," section below each release. Each tarball name has the format:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},"elp-[OS]-[ARCH]-[c]-otp-[OTP_VERSION].tar.gz\n")),(0,a.mdx)("p",null,"Pick the appropriate version according to your Operating System (OS), Architecture (ARCH) and Erlang/OTP version (OTP_VERSION). For example, for my Darwin MacBook Pro where I have installed Erlang/OTP 25, I will pick:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},"elp-macos-x86_64-apple-darwin-otp-25.3.tar.gz\n")),(0,a.mdx)("admonition",{type:"tip"},(0,a.mdx)("p",{parentName:"admonition"},"Unsure about your architecture? Try the ",(0,a.mdx)("inlineCode",{parentName:"p"},"uname -a")," command.\nUnsure about your Erlang/OTP version? Try ",(0,a.mdx)("inlineCode",{parentName:"p"},"erl -eval 'erlang:display(erlang:system_info(otp_release)), halt().'  -noshell"))),(0,a.mdx)("p",null,"Untar the package and place the ",(0,a.mdx)("inlineCode",{parentName:"p"},"elp")," binary in a place visible by your `PATH``. For example:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre"},"cd ~/Downloads\ntar -xvzf elp-macos-x86_64-apple-darwin-otp-25.3.tar.gz\nmv elp ~/bin\nexport PATH=$PATH:~/bin\n")),(0,a.mdx)("p",null,"Follow ",(0,a.mdx)("a",{parentName:"p",href:"/erlang-language-platform/docs/get-started/cli#verify-elp-is-correctly-installed"},"these steps")," to verify ELP is correctly installed."),(0,a.mdx)("h2",{id:"from-source"},"From Source"),(0,a.mdx)("p",null,"TBD."))}d.isMDXComponent=!0}}]);