"use strict";(self.webpackChunkstaticdocs_starter=self.webpackChunkstaticdocs_starter||[]).push([[3553],{95396:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"get-started/editors/emacs","title":"Emacs","description":"The ELP project can be used as a language server in the Emacs text editor via the eglot or lsp-mode LSP clients.","source":"@site/docs/get-started/editors/emacs.md","sourceDirName":"get-started/editors","slug":"/get-started/editors/emacs","permalink":"/erlang-language-platform/docs/get-started/editors/emacs","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Configure Your Editor","permalink":"/erlang-language-platform/docs/get-started/editors/"},"next":{"title":"VS Code","permalink":"/erlang-language-platform/docs/get-started/editors/vscode"}}');var s=o(74848),r=o(28453);const a={sidebar_position:2},i="Emacs",l={},c=[{value:"Eglot",id:"eglot",level:2},{value:"Configuration",id:"configuration",level:3},{value:"lsp-mode",id:"lsp-mode",level:2},{value:"Configuration",id:"configuration-1",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"The following servers support current file but do not have automatic installation",id:"the-following-servers-support-current-file-but-do-not-have-automatic-installation",level:4}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"emacs",children:"Emacs"})}),"\n",(0,s.jsxs)(t.p,{children:["The ELP project can be used as a ",(0,s.jsx)(t.a,{href:"https://microsoft.github.io/language-server-protocol/overviews/lsp/overview/",children:"language server"})," in the Emacs text editor via the ",(0,s.jsx)(t.a,{href:"https://github.com/joaotavora/eglot",children:"eglot"})," or ",(0,s.jsx)(t.a,{href:"https://emacs-lsp.github.io/lsp-mode/",children:"lsp-mode"})," LSP clients."]}),"\n",(0,s.jsx)(t.h2,{id:"eglot",children:"Eglot"}),"\n",(0,s.jsxs)(t.p,{children:["Eglot is part of Emacs core since Emacs 29.\nFor earlier versions it can be installed with the ",(0,s.jsx)(t.code,{children:"eglot"})," package."]}),"\n",(0,s.jsx)(t.h3,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-elisp",children:'(use-package eglot\n\n  :config\n  ;; Remove default LSP server\n  (setopt eglot-server-programs\n          (assq-delete-all \'erlang-mode eglot-server-programs))\n\n  ;; Enable ELP\n  (add-to-list \'eglot-server-programs\n               \'(erlang-mode . ("elp" "server"))\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Refer to the ",(0,s.jsx)(t.a,{href:"https://elpa.gnu.org/devel/doc/eglot.html#Customization-Variables",children:"manual"})," for additional configuration options."]}),"\n",(0,s.jsx)(t.h2,{id:"lsp-mode",children:"lsp-mode"}),"\n",(0,s.jsxs)(t.p,{children:["Install the ",(0,s.jsx)(t.code,{children:"lsp-mode"})," package, which is a generic Emacs client for LSP servers. You can follow ",(0,s.jsx)(t.a,{href:"https://emacs-lsp.github.io/lsp-mode/page/installation/",children:"these instructions"})," to install it."]}),"\n",(0,s.jsx)(t.h3,{id:"configuration-1",children:"Configuration"}),"\n",(0,s.jsxs)(t.p,{children:["Add the following to your emacs ",(0,s.jsx)(t.code,{children:".emacs"})," file or equivalent."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-elisp",children:"(use-package lsp-mode\n\n  :config\n  ;; Enable LSP automatically for Erlang files\n  (add-hook 'erlang-mode-hook #'lsp)\n\n  ;; ELP, added as priority 0 (> -1) so takes priority over the built-in one\n  (lsp-register-client\n   (make-lsp-client :new-connection (lsp-stdio-connection '(\"elp\" \"server\"))\n                    :major-modes '(erlang-mode)\n                    :priority 0\n                    :server-id 'erlang-language-platform))\n  )\n"})}),"\n",(0,s.jsxs)(t.p,{children:["For a list of available configuration option, please refer to ",(0,s.jsx)(t.a,{href:"https://emacs-lsp.github.io/lsp-mode/page/lsp-erlang-elp/",children:"this page"})," and to the ",(0,s.jsxs)(t.a,{href:"https://emacs-lsp.github.io/lsp-mode/page/settings/mode/",children:[(0,s.jsx)(t.code,{children:"lsp-mode"})," settings documentation"]}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(t.h4,{id:"the-following-servers-support-current-file-but-do-not-have-automatic-installation",children:"The following servers support current file but do not have automatic installation"}),"\n",(0,s.jsxs)(t.p,{children:["Ensure that the ",(0,s.jsx)(t.code,{children:"elp"})," executable is available in your ",(0,s.jsx)(t.code,{children:"PATH"})," via Emacs. A workaround is:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-elisp",children:";; Ensure your Emacs environment looks like your user's shell one\n(package-require 'exec-path-from-shell)\n(exec-path-from-shell-initialize)\n"})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,t,o)=>{o.d(t,{R:()=>a,x:()=>i});var n=o(96540);const s={},r=n.createContext(s);function a(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);