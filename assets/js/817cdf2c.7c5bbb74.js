"use strict";(self.webpackChunkstaticdocs_starter=self.webpackChunkstaticdocs_starter||[]).push([[6491],{15680:(e,r,n)=>{n.r(r),n.d(r,{MDXContext:()=>d,MDXProvider:()=>u,mdx:()=>x,useMDXComponents:()=>p,withMDXComponents:()=>c});var t=n(96540);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(){return o=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var n=arguments[r];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e},o.apply(this,arguments)}function l(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?l(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function s(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=t.createContext({}),c=function(e){return function(r){var n=p(r.components);return t.createElement(e,o({},r,{components:n}))}},p=function(e){var r=t.useContext(d),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},u=function(e){var r=p(e.components);return t.createElement(d.Provider,{value:r},e.children)},m="mdxType",f={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},g=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=p(n),u=a,m=c["".concat(l,".").concat(u)]||c[u]||f[u]||o;return n?t.createElement(m,i(i({ref:r},d),{},{components:n})):t.createElement(m,i({ref:r},d))}));function x(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=g;var i={};for(var s in r)hasOwnProperty.call(r,s)&&(i[s]=r[s]);i.originalType=e,i[m]="string"==typeof e?e:a,l[1]=i;for(var d=2;d<o;d++)l[d]=n[d];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}g.displayName="MDXCreateElement"},53396:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var t=n(58168),a=(n(96540),n(15680));const o={sidebar_position:318},l="L1318 - Expression Updates a Literal",i={unversionedId:"erlang-error-index/l/L1318",id:"erlang-error-index/l/L1318",title:"L1318 - Expression Updates a Literal",description:"Error",source:"@site/docs/erlang-error-index/l/L1318.md",sourceDirName:"erlang-error-index/l",slug:"/erlang-error-index/l/L1318",permalink:"/erlang-language-platform/docs/erlang-error-index/l/L1318",draft:!1,tags:[],version:"current",sidebarPosition:318,frontMatter:{sidebar_position:318},sidebar:"tutorialSidebar",previous:{title:"L1309 - Missing function specification",permalink:"/erlang-language-platform/docs/erlang-error-index/l/L1309"},next:{title:"O0000 - Generic EDoc Error",permalink:"/erlang-language-platform/docs/erlang-error-index/o/O0000"}},s={},d=[{value:"Error",id:"error",level:2},{value:"Explanation",id:"explanation",level:2}],c={toc:d},p="wrapper";function u(e){let{components:r,...n}=e;return(0,a.mdx)(p,(0,t.A)({},c,n,{components:r,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"l1318---expression-updates-a-literal"},"L1318 - Expression Updates a Literal"),(0,a.mdx)("h2",{id:"error"},"Error"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-erlang"},"  -define(DEFAULT, #{a => 1}).\n\n  updated(Value) ->\n    ?DEFAULT#{a => Value}.\n%%  ^^^^^^^^ warning: expression updates a literal\n")),(0,a.mdx)("h2",{id:"explanation"},"Explanation"),(0,a.mdx)("p",null,"The warning occurs when a map or a record is updated using the following syntaxes:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-erlang"},"> #{a => b}#{c => d}\n#{c => d,a => b}\n")),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-erlang"},"> rd(my_record, {a, b}). %% rd/2 allows you to define an Erlang record from a shell\n> #my_record{a = 1}#my_record{a = 2}.\n#my_record{a = 2,b = undefined}\n")),(0,a.mdx)("p",null,"While this is valid Erlang syntax, this behaviour is usually not intentional and the result of a missing comma in a list of elements. Consider, for example:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-erlang"},"my_list() ->\n  [ #{a => 1} %% Missing comma here!\n    #{a => 2}\n  ].\n")),(0,a.mdx)("p",null,"Which results in ",(0,a.mdx)("inlineCode",{parentName:"p"},"[#{a => 2}]"),"."),(0,a.mdx)("p",null,"To fix the issue, just add the missing comma. If the update is intentional, a common (but ugly) workaround to silent the linter is to wrap the first map/record in a ",(0,a.mdx)("inlineCode",{parentName:"p"},"begin/end")," block,\nwhich will avoid any additional runtime cost. As an example, you could rewrite the following:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-erlang"},"  -define(DEFAULT, #{a => 1}).\n\n  updated(Value) ->\n    ?DEFAULT#{a => Value}.\n")),(0,a.mdx)("p",null,"Into:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-erlang"},"  -define(DEFAULT, #{a => 1}).\n\n  updated(Value) ->\n    begin ?DEFAULT end#{a => Value}.\n")))}u.isMDXComponent=!0}}]);