"use strict";(self.webpackChunkstaticdocs_starter=self.webpackChunkstaticdocs_starter||[]).push([[6272],{24047:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"erlang-error-index/w/W0031","title":"W0031 - maps:update/3 usage rather than dedicated syntax","description":"Warning","source":"@site/docs/erlang-error-index/w/W0031.md","sourceDirName":"erlang-error-index/w","slug":"/erlang-error-index/w/W0031","permalink":"/erlang-language-platform/docs/erlang-error-index/w/W0031","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":31,"frontMatter":{"sidebar_position":31},"sidebar":"tutorialSidebar","previous":{"title":"W0030 - maps:put/3 usage rather than dedicated syntax","permalink":"/erlang-language-platform/docs/erlang-error-index/w/W0030"},"next":{"title":"W0032 - maps:find/2 usage rather than dedicated syntax","permalink":"/erlang-language-platform/docs/erlang-error-index/w/W0032"}}');var r=a(74848),s=a(28453);const i={sidebar_position:31},d="W0031 - maps:update/3 usage rather than dedicated syntax",o={},c=[{value:"Warning",id:"warning",level:2},{value:"Explanation",id:"explanation",level:2}];function l(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsxs)(n.h1,{id:"w0031---mapsupdate3-usage-rather-than-dedicated-syntax",children:["W0031 - ",(0,r.jsx)(n.code,{children:"maps:update/3"})," usage rather than dedicated syntax"]})}),"\n",(0,r.jsx)(n.h2,{id:"warning",children:"Warning"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-erlang",children:"main(K, V, Map) ->\n    maps:update(K, V, Map).\n%%  ^^^^^^^^^^^^^^^^^^^^^^\ud83d\udca1 information: Consider using map syntax rather than a function call.\n"})}),"\n",(0,r.jsx)(n.h2,{id:"explanation",children:"Explanation"}),"\n",(0,r.jsxs)(n.p,{children:["The warning message indicates that a key-value is being updated in a map\nusing the ",(0,r.jsx)(n.code,{children:"maps:update/3"})," function call rather than the dedicated syntax."]}),"\n",(0,r.jsx)(n.p,{children:"Whilst this will correctly update the key-value into the map, it is not\nconsidered idiomatic, and may be less efficient than using the map update\nsyntax directly."}),"\n",(0,r.jsxs)(n.p,{children:["If the keys are constants known at compile-time, using the map update syntax\nwith the ",(0,r.jsx)(n.code,{children:":="})," operator is more efficient than multiple calls to ",(0,r.jsx)(n.code,{children:"maps:update/3"}),",\nespecially for small maps. This implies than using the ",(0,r.jsx)(n.code,{children:":="})," operator should\nmaking future additions to the code also both performant and clear."]}),"\n",(0,r.jsxs)(n.p,{children:["To fix the issue, use the built-in ",(0,r.jsx)(n.code,{children:"Map#{Key := Value}"})," syntax to insert the\n",(0,r.jsx)(n.code,{children:"Key"})," and ",(0,r.jsx)(n.code,{children:"Value"})," into the ",(0,r.jsx)(n.code,{children:"Map"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-erlang",children:"main(K, V, Map) ->\n    Map#{K := V}.\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"Note:"})," Use the ",(0,r.jsx)(n.code,{children:"=>"})," operator instead, if the key may not already exist in\nthe ",(0,r.jsx)(n.code,{children:"Map"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>d});var t=a(96540);const r={},s=t.createContext(r);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);