"use strict";(self.webpackChunkstaticdocs_starter=self.webpackChunkstaticdocs_starter||[]).push([[6693],{76207:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"erlang-error-index/p/P1700","title":"P1700 - Head Mismatch","description":"Error","source":"@site/docs/erlang-error-index/p/P1700.md","sourceDirName":"erlang-error-index/p","slug":"/erlang-error-index/p/P1700","permalink":"/erlang-language-platform/docs/erlang-error-index/p/P1700","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"sidebar_position":0},"sidebar":"tutorialSidebar","previous":{"title":"About","permalink":"/erlang-language-platform/docs/erlang-error-index/p/about"},"next":{"title":"P1701 - Bad Type Variable","permalink":"/erlang-language-platform/docs/erlang-error-index/p/P1701"}}');var t=r(74848),a=r(28453);const i={sidebar_position:0},s="P1700 - Head Mismatch",c={},l=[{value:"Error",id:"error",level:2},{value:"Explanation",id:"explanation",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"p1700---head-mismatch",children:"P1700 - Head Mismatch"})}),"\n",(0,t.jsx)(n.h2,{id:"error",children:"Error"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-erlang",children:"    foo(0) -> 1;\n    boo(1) -> 2.\n %% ^^^ error: head mismatch 'boo' vs 'foo'\n"})}),"\n",(0,t.jsx)(n.h2,{id:"explanation",children:"Explanation"}),"\n",(0,t.jsx)(n.p,{children:"The error message indicates that two function clauses belonging the same function differ in their name or in the number of arguments."}),"\n",(0,t.jsxs)(n.p,{children:["In Erlang functions are uniquely identified by the module they belong to, the function name and the number of argument they take (known as ",(0,t.jsx)(n.em,{children:"arity"}),"). Each function can be composed by multiple ",(0,t.jsx)(n.em,{children:"clauses"}),", separated by a semicolon (",(0,t.jsx)(n.code,{children:";"}),"). Therefore, all clauses belonging to the same function have to share the same name."]}),"\n",(0,t.jsx)(n.p,{children:"To fix the error you need to ensure that every function clause has the same name and that it takes the same number of arguments."}),"\n",(0,t.jsxs)(n.p,{children:["In the above example, ",(0,t.jsx)(n.code,{children:"boo/1"})," could be a second clause for the ",(0,t.jsx)(n.code,{children:"foo/1"})," function, containing a typo. In that case, the corrective action would be to fix the typo:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-erlang",children:"    foo(0) -> 1;\n    foo(1) -> 2.\n"})}),"\n",(0,t.jsxs)(n.p,{children:["It could also be that ",(0,t.jsx)(n.code,{children:"boo/1"})," is intended to be a completely different function.\nIn that case the error can be fixed by replacing the semicolon on the previous line with a fullstop. Leaving an empty line between the two functions would also be a good idea, to help the reader understanding ",(0,t.jsx)(n.code,{children:"foo/1"})," and ",(0,t.jsx)(n.code,{children:"boo/1"})," are two distinct functions:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-erlang",children:"    foo(0) -> 1.\n\n    boo(1) -> 2.\n"})}),"\n",(0,t.jsxs)(n.p,{children:["For more information about Erlang functions please refer to the ",(0,t.jsx)(n.a,{href:"https://www.erlang.org/doc/reference_manual/functions",children:"official documentation"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>s});var o=r(96540);const t={},a=o.createContext(t);function i(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);