"use strict";(self.webpackChunkstaticdocs_starter=self.webpackChunkstaticdocs_starter||[]).push([[525],{2949:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"get-started/editors/neovim","title":"Neovim","description":"screenshot","source":"@site/docs/get-started/editors/neovim.md","sourceDirName":"get-started/editors","slug":"/get-started/editors/neovim","permalink":"/erlang-language-platform/docs/get-started/editors/neovim","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Vim","permalink":"/erlang-language-platform/docs/get-started/editors/vim"},"next":{"title":"Helix","permalink":"/erlang-language-platform/docs/get-started/editors/helix"}}');var a=i(74848),l=i(28453);const t={sidebar_position:5},o="Neovim",r={},c=[{value:"Installation",id:"installation",level:2},{value:"<code>mason.nvim</code>",id:"masonnvim",level:3},{value:"Updating ELP",id:"updating-elp",level:4},{value:"Manual installation",id:"manual-installation",level:3},{value:"Example config",id:"example-config",level:4},{value:"Troubleshooting",id:"troubleshooting",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"neovim",children:"Neovim"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"screenshot",src:i(64383).A+""})}),"\n",(0,a.jsxs)(n.p,{children:["The ELP project can be used as a ",(0,a.jsx)(n.a,{href:"https://microsoft.github.io/language-server-protocol/overviews/lsp/overview/",children:"language server"})," in Neovim."]}),"\n",(0,a.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,a.jsx)(n.h3,{id:"masonnvim",children:(0,a.jsx)(n.code,{children:"mason.nvim"})}),"\n",(0,a.jsxs)(n.p,{children:["The easiest way to install the ELP server is to use ",(0,a.jsx)(n.a,{href:"https://github.com/williamboman/mason.nvim",children:"mason.nvim"}),", a package manager\nfocused on language servers, linters and similar tools. If you use Neovim for programming, you likely already have ",(0,a.jsx)(n.code,{children:"mason.nvim"}),' installed. It is also included in all the most popular "batteries included" configurations/distributions of Neovim such ',(0,a.jsx)(n.a,{href:"https://github.com/nvim-lua/kickstart.nvim",children:"kickstart.nvim"}),", ",(0,a.jsx)(n.a,{href:"https://github.com/LazyVim/LazyVim",children:"LazyVim"}),", ",(0,a.jsx)(n.a,{href:"https://nvchad.com/",children:"NVChad"})," and others."]}),"\n",(0,a.jsxs)(n.p,{children:["With ",(0,a.jsx)(n.code,{children:"mason.nvim"})," installed, you can install the ELP server by running the following command:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:":MasonInstall elp\n"})}),"\n",(0,a.jsx)(n.p,{children:"from within Neovim."}),"\n",(0,a.jsxs)(n.p,{children:["Alternatively you can run ",(0,a.jsx)(n.code,{children:":Mason"})," and browse the list of available packages, then press ",(0,a.jsx)(n.code,{children:"i"})," when ",(0,a.jsx)(n.code,{children:"elp"})," is highlighted."]}),"\n",(0,a.jsx)(n.h4,{id:"updating-elp",children:"Updating ELP"}),"\n",(0,a.jsxs)(n.p,{children:["You can update all packages managed by ",(0,a.jsx)(n.code,{children:"mason.nvim"})," by running ",(0,a.jsx)(n.code,{children:":Mason"})," and pressing ",(0,a.jsx)(n.code,{children:"U"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"manual-installation",children:"Manual installation"}),"\n",(0,a.jsxs)(n.p,{children:["Alternatively, if you don't have ",(0,a.jsx)(n.code,{children:"mason.nvim"})," installed, you can ",(0,a.jsx)(n.a,{href:"/erlang-language-platform/docs/get-started/install#from-binary",children:"install the ELP binary"})," and configure key mappings manually."]}),"\n",(0,a.jsx)(n.h4,{id:"example-config",children:"Example config"}),"\n",(0,a.jsxs)(n.p,{children:["Here is an example user config to be placed in your ",(0,a.jsx)(n.code,{children:"init.vim"})," file (",(0,a.jsx)(n.code,{children:"~/.config/nvim/init.vim"})," on Unix systems):"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-Vimscript",children:"nnoremap <SPACE> <Nop>\nlet mapleader=\" \"\n\ncall plug#begin()\nPlug 'neovim/nvim-lspconfig'\ncall plug#end()\n\nlua <<EOF\nlocal opts = { noremap=true, silent=true }\nvim.api.nvim_set_keymap('n', '<leader>e', '<cmd>lua vim.diagnostic.open_float()<CR>', opts)\n\nlocal on_attach = function(client, bufnr)\n  vim.api.nvim_buf_set_option(bufnr, 'omnifunc', 'v:lua.vim.lsp.omnifunc')\n  vim.api.nvim_buf_set_keymap(bufnr, 'n', 'gd', '<cmd>lua vim.lsp.buf.definition()<CR>', opts)\n  vim.api.nvim_buf_set_keymap(bufnr, 'n', 'K', '<cmd>lua vim.lsp.buf.hover()<CR>', opts)\n  vim.api.nvim_buf_set_keymap(bufnr, 'n', '<leader>rn', '<cmd>lua vim.lsp.buf.rename()<CR>', opts)\n  vim.api.nvim_buf_set_keymap(bufnr, 'n', 'gr', '<cmd>lua vim.lsp.buf.references()<CR>', opts)\n  vim.api.nvim_buf_set_keymap(bufnr, 'n', '<leader>ca', '<cmd>lua vim.lsp.buf.code_action()<CR>', opts)\n  if client.server_capabilities.inlayHintProvider then\n    vim.api.nvim_buf_set_keymap(bufnr, 'n', '<leader>ih',\n      '<cmd>lua vim.lsp.inlay_hint.enable(not vim.lsp.inlay_hint.is_enabled())<CR>',\n      { noremap=true, silent=true, desc = '[T]oggle Inlay [H]ints' })\n  end\nend\n\nrequire('lspconfig').elp.setup {\n  on_attach = on_attach,\n  settings = {\n    elp = {\n      diagnostics = {\n        disabled = {\n          \"W0030\",\n          \"W0031\",\n          \"W0032\"\n        }\n      }\n    }\n  }\n}\nEOF\n"})}),"\n",(0,a.jsxs)(n.p,{children:["In this example config, the Leader key is mapped to ",(0,a.jsx)(n.code,{children:"<space>"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://github.com/junegunn/vim-plug",children:"vim-plug"}),", a minimalist Vim plugin manager is used to install ",(0,a.jsx)(n.a,{href:"https://github.com/neovim/nvim-lspconfig",children:"nvim-lspconfig"}),"."]}),"\n",(0,a.jsx)(n.p,{children:'The Lua code then defines the following key mappings in "normal" Vim mode:'}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"<space>e"})," displays diagnostics, for example the red text in above screenshot"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"gd"})," goes to the definition"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"K"})," shows function specs"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"<space>rn"})," renames a variable"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"gr"})," shows references"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"<space>ca"})," suggests code actions for warnings displayed ELP"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"<space>ih"})," toggles displaying inlay hints (for example function argument hints)"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Finally, you can disable some ",(0,a.jsx)(n.a,{href:"/erlang-language-platform/docs/erlang-error-index/w/about",children:"warnings"})," globally for all your Erlang projects."]}),"\n",(0,a.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:":LspInfo"})," shows the current status of the LSP client."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:":LspLog"})," opens the log file for the LSP client, which can be useful for debugging."]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},64383:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/neovim-d9675444d28e18ce6a03fe38db0cd38d.png"},28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>o});var s=i(96540);const a={},l=s.createContext(a);function t(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);