"use strict";(self.webpackChunkstaticdocs_starter=self.webpackChunkstaticdocs_starter||[]).push([[3800],{95693:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"get-started/configure-project/elp-toml","title":"The .elp.toml Configuration File","description":"A .elp.toml configuration file can be added to a project\'s root directory to","source":"@site/docs/get-started/configure-project/elp-toml.md","sourceDirName":"get-started/configure-project","slug":"/get-started/configure-project/elp-toml","permalink":"/erlang-language-platform/docs/get-started/configure-project/elp-toml","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Custom Project","permalink":"/erlang-language-platform/docs/get-started/configure-project/custom-project"},"next":{"title":"The .elp_lint.toml Configuration File","permalink":"/erlang-language-platform/docs/get-started/configure-project/elp-lint-toml"}}');var r=i(74848),s=i(28453);const o={sidebar_position:5},l="The .elp.toml Configuration File",d={},a=[{value:"A Sample <code>.elp.toml</code> Configuration File",id:"a-sample-elptoml-configuration-file",level:2},{value:"Configuration Sections",id:"configuration-sections",level:2},{value:"[build_info]",id:"build-info",level:3},{value:"[eqwalizer]",id:"eqwalizer",level:3},{value:"[buck]",id:"buck",level:3},{value:"[rebar]",id:"rebar",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsxs)(n.h1,{id:"the-elptoml-configuration-file",children:["The ",(0,r.jsx)(n.code,{children:".elp.toml"})," Configuration File"]})}),"\n",(0,r.jsxs)(n.p,{children:["A ",(0,r.jsx)(n.code,{children:".elp.toml"})," configuration file can be added to a project's root directory to\ncustomize the behaviour of ELP for a given project."]}),"\n",(0,r.jsxs)(n.p,{children:["The file can also be used as ",(0,r.jsx)(n.strong,{children:"an absolute marker for the root of an ELP\nproject"}),", If one is found - and it contains all the required information -, ELP\nwill not perform any upward auto-discovery for the structure of a project."]}),"\n",(0,r.jsxs)(n.h2,{id:"a-sample-elptoml-configuration-file",children:["A Sample ",(0,r.jsx)(n.code,{children:".elp.toml"})," Configuration File"]}),"\n",(0,r.jsxs)(n.p,{children:["Here is an example of a full ",(0,r.jsx)(n.code,{children:".elp.toml"})," file. All sections are optional. The\n",(0,r.jsx)(n.a,{href:"#build-info",children:"build_info"})," can be used to mark the root of a project (via the\n",(0,r.jsx)(n.code,{children:"build_info"})," property). The available configuration sections are described\nbelow."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'[build_info]\nfile = "my_hand_crafted_build_info.json"\n\n[eqwalizer]\nenable_all = true\nmax_tasks = 32\nignore_modules = ["very_big_generated_module"]\n\n[buck]\nenabled = false\n\n[rebar]\nprofile = "test"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"configuration-sections",children:"Configuration Sections"}),"\n",(0,r.jsx)(n.h3,{id:"build-info",children:"[build_info]"}),"\n",(0,r.jsx)(n.p,{children:"This section is used to configure project discovery."}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Key"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"file"}),(0,r.jsx)(n.td,{children:"String"}),(0,r.jsxs)(n.td,{children:["Path to a JSON file describing the project. This is only honoured if ",(0,r.jsx)(n.code,{children:"buck.enabled"})," is ",(0,r.jsx)(n.code,{children:"false"})," or missing. The format of the JSON file is described in the ",(0,r.jsx)(n.a,{href:"/erlang-language-platform/docs/get-started/configure-project/custom-project#the-build_infojson-format",children:"build_info.json"})," section."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"apps"}),(0,r.jsx)(n.td,{children:"String or Array of Strings/App Data"}),(0,r.jsxs)(n.td,{children:["A string pattern or a sequence of string patterns or app data used to generate the applications for the ",(0,r.jsx)(n.code,{children:"build_info.json"})," configuration. Unused if ",(0,r.jsx)(n.code,{children:"file"})," is specified. See below for examples."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"deps"}),(0,r.jsx)(n.td,{children:"String or Array of Strings/App Data"}),(0,r.jsxs)(n.td,{children:["A string pattern or a sequence of string patterns or app data used to generate the dependencies for the ",(0,r.jsx)(n.code,{children:"build_info.json"})," configuration. Unused if ",(0,r.jsx)(n.code,{children:"file"})," is specified. See below for examples."]})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"apps"})," and ",(0,r.jsx)(n.code,{children:"deps"})," fields can contain a string pattern or a sequence of\nstring patterns. Each pattern can use wildcards. E.g."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'[build_info]\napps = ["some_apps/*", "more_apps/*"]\ndeps = "deps/*"\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Each pattern will be expanded, behind the scenes, to an ",(0,r.jsx)(n.em,{children:"app"}),", as described in\nthe ",(0,r.jsx)(n.a,{href:"/erlang-language-platform/docs/get-started/configure-project/custom-project#the-build_infojson-format",children:"build_info.json"})," section. Each\napp will look something like:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'{\n    "name": "app_name",\n    "dir": "path/to/app",                         // Relative to project root\n    "src_dirs": ["path/to/src", ...],             // Relative to app dir, defaults to ["src"]\n    "extra_src_dirs": ["path/to/extra_src", ...], // Relative to app dir, defaults to []\n    "ebin": "path/to/ebin",                       // Relative to app dir, defaults to "ebin"\n    "include_dirs": ["include", ...],             // Relative to app dir, defaults to []\n    "macros": ["MACRO", ...],                     // Defaults to []\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"It is possible to override these values for a given app. For example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'[build_info]\napps = [ "some_apps/*",\n         "more_apps/*",\n         {name = "special_app", dir = "some_apps/special_app", "src_dirs" = ["src", "more_src"]}\n         ]\ndeps = "deps/*"\n'})}),"\n",(0,r.jsxs)(n.p,{children:['The order in which the entries are specified is important, in the sense that\n"the last entry wins". In the above example, the ',(0,r.jsx)(n.code,{children:"special_app"})," in\n",(0,r.jsx)(n.code,{children:"some_apps/special_app"})," will contain an extra source directory, while all the\nother apps in the same ",(0,r.jsx)(n.code,{children:"some_apps"})," directory will default to ",(0,r.jsx)(n.code,{children:"src"})," only."]}),"\n",(0,r.jsx)(n.h3,{id:"eqwalizer",children:"[eqwalizer]"}),"\n",(0,r.jsxs)(n.p,{children:["ELP is integrated with the ",(0,r.jsx)(n.a,{href:"https://github.com/whatsapp/eqwalizer",children:"eqWAlizer"}),"\ntype checker. The integration can be configured via this section."]}),"\n",(0,r.jsxs)(n.admonition,{type:"info",children:[(0,r.jsx)(n.p,{children:"By default eqWAlizer is enabled on all non-test modules, including generated modules.\nThis can be overriden per module via the following attributes:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"-eqwalizer(ignore)."})," Opt-out module unconditionally"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"-typing([eqwalizer])."})," Opt-in unconditionally, even for test modules"]}),"\n"]})]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Key"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"enabled_all"}),(0,r.jsx)(n.td,{children:"Boolean"}),(0,r.jsx)(n.td,{children:"Enable eqwalizer for all modules by default, but still honours the module-specific overrides listed above and the ignore_modules list."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"max_tasks"}),(0,r.jsx)(n.td,{children:"Integer"}),(0,r.jsx)(n.td,{children:"Max number of parallel eqWAlizer tasks, defaults to 4 (eqWAlizer instances are memory intensive). This only applies to using eqWAlizer from the CLI."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"ignore_modules"}),(0,r.jsx)(n.td,{children:"List of String"}),(0,r.jsx)(n.td,{children:"Disable eqwalizer for individual modules from the config."})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"buck",children:"[buck]"}),"\n",(0,r.jsxs)(n.p,{children:["Configure the interaction between ELP and the ",(0,r.jsx)(n.a,{href:"https://buck2.build/",children:"Buck2"}),"\nbuild tool. See ",(0,r.jsx)(n.a,{href:"https://youtu.be/4ALgsBqNBhQ",children:"this presentation"})," for details\nabout Erlang support for Buck2."]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Key"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"enabled"}),(0,r.jsx)(n.td,{children:"Boolean"}),(0,r.jsx)(n.td,{children:"Discover the project using Buck2"})]})})]}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsx)(n.p,{children:"The github version is not built with buck2 support enabled. This will change\nsoon, once we tweak the tests."})}),"\n",(0,r.jsx)(n.h3,{id:"rebar",children:"[rebar]"}),"\n",(0,r.jsxs)(n.p,{children:["Configure ELP for ",(0,r.jsx)(n.a,{href:"https://rebar3.org/",children:"rebar3"}),"-based projects."]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Key"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Default"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"profile"}),(0,r.jsx)(n.td,{children:"String"}),(0,r.jsxs)(n.td,{children:["The ",(0,r.jsx)(n.code,{children:"rebar3"})," profile to use for project discovery. Only used if the ",(0,r.jsx)(n.code,{children:"file"})," property is specified in the ",(0,r.jsx)(n.a,{href:"#build-info",children:"build_info"})," section."]}),(0,r.jsx)(n.td,{children:"test"})]})})]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var t=i(96540);const r={},s=t.createContext(r);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);